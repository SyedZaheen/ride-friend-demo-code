type Location @embedded {
  lat: Float!
  lng: Float!
  description: String!
}

type User {
  authSub: String!
  isDriver: Boolean
  authName: String!
  sex: String
  wantSameSex: Boolean
  friends: [ID]
  routes: [Route!] @relation
}

type Route {
  user: User!
  nickName: String!
  startLocation: Location!
  startTime: Int!
  endLocation: Location!
  startRadius: Int!
  endRadius: Int!
  timeDeviation: Int!
  returnRoute: Route
}

type Query {
  getUserByAuthSub(authSub: String!): User
}
